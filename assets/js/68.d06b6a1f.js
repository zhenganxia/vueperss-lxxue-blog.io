(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{529:function(t,a,s){"use strict";s.r(a);var e=s(25),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#git命令"}},[t._v("git命令")]),s("ul",[s("li",[s("a",{attrs:{href:"#查看分支情况"}},[t._v("查看分支情况")])]),s("li",[s("a",{attrs:{href:"#撤销本地提交"}},[t._v("撤销本地提交")])]),s("li",[s("a",{attrs:{href:"#撤销远程提交"}},[t._v("撤销远程提交")])]),s("li",[s("a",{attrs:{href:"#处理本地回滚"}},[t._v("处理本地回滚")])]),s("li",[s("a",{attrs:{href:"#处理远程仓库回滚"}},[t._v("处理远程仓库回滚")])]),s("li",[s("a",{attrs:{href:"#暂存"}},[t._v("暂存")])]),s("li",[s("a",{attrs:{href:"#创建分支"}},[t._v("创建分支")])]),s("li",[s("a",{attrs:{href:"#创建本地分支并且同步远程分支-本地没有master分支-需要重新创建一个本地master分支并且要同步远程的master"}},[t._v("创建本地分支并且同步远程分支(本地没有master分支，需要重新创建一个本地master分支并且要同步远程的master)")])]),s("li",[s("a",{attrs:{href:"#删除本地分支-需要切其他分支操作"}},[t._v("删除本地分支：需要切其他分支操作")])]),s("li",[s("a",{attrs:{href:"#删除远程分支"}},[t._v("删除远程分支")])]),s("li",[s("a",{attrs:{href:"#删除文件"}},[t._v("删除文件")])]),s("li",[s("a",{attrs:{href:"#查看远程分支状态"}},[t._v("查看远程分支状态")])]),s("li",[s("a",{attrs:{href:"#更新远程分支和本地分支保持一致-本地、远程分支都删除-使用git-branch-a-依然有远程分支"}},[t._v("更新远程分支和本地分支保持一致（本地、远程分支都删除，使用git branch -a 依然有远程分支）")])]),s("li",[s("a",{attrs:{href:"#分支强制合并-将modify分支内容强制合并到master"}},[t._v("分支强制合并（将modify分支内容强制合并到master）")])]),s("li",[s("a",{attrs:{href:"#同步本地远程分支-远程删除分支-本地依然有"}},[t._v("同步本地远程分支：（远程删除分支，本地依然有）")])]),s("li",[s("a",{attrs:{href:"#批量删除本地分支"}},[t._v("批量删除本地分支")])]),s("li",[s("a",{attrs:{href:"#合并分支"}},[t._v("合并分支")])]),s("li",[s("a",{attrs:{href:"#创建ssh-key-创建免登录的授权"}},[t._v("创建SSH Key 创建免登录的授权")])]),s("li",[s("a",{attrs:{href:"#提交文件夹到github-文件夹为空"}},[t._v("提交文件夹到github（文件夹为空）")])]),s("li",[s("a",{attrs:{href:"#仓库迁移"}},[t._v("仓库迁移")])]),s("li",[s("a",{attrs:{href:"#多个仓库使用gitclone没有办法下载-ssh和http都下载不了"}},[t._v("多个仓库使用gitclone没有办法下载（ssh和http都下载不了）")])]),s("li",[s("a",{attrs:{href:"#git-help-gc-本地悬空对象过多-删除stash没有真正删除"}},[t._v("git help gc：本地悬空对象过多（删除stash没有真正删除）")])]),s("li",[s("a",{attrs:{href:"#日常使用"}},[t._v("日常使用")])]),s("li",[s("a",{attrs:{href:"#查看分支创建时间和从那个分支创建"}},[t._v("查看分支创建时间和从那个分支创建")])]),s("li",[s("a",{attrs:{href:"#查看插件版本号"}},[t._v("查看插件版本号")])]),s("li",[s("a",{attrs:{href:"#更改commit信息"}},[t._v("更改commit信息")])])])]),s("li",[s("a",{attrs:{href:"#npm命令"}},[t._v("npm命令")]),s("ul",[s("li",[s("a",{attrs:{href:"#常用命令"}},[t._v("常用命令")])])])]),s("li",[s("a",{attrs:{href:"#linux命令"}},[t._v("linux命令")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"git命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" git命令")]),t._v(" "),s("h3",{attrs:{id:"查看分支情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看分支情况"}},[t._v("#")]),t._v(" 查看分支情况")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git branch: 查看本地分支信息\ngit branch -a:查看所有的分支信息\ngit branch --merged 查看哪些分支已被并入当前分支（译注：也就是说哪些分支是当前分支的直接上游。）\ngit branch -a --list "*plm*": 查询有plm的分支\n')])])]),s("h3",{attrs:{id:"撤销本地提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销本地提交"}},[t._v("#")]),t._v(" 撤销本地提交")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reset --soft HEAD^/版本号 :撤回最近一次commit内容到工作区/撤回指定版本号commit内容到工作区\ngit reset --hard HEAD^/版本号:撤回最近一次的commit内容为上一个版本/撤回到指定版本号内容\n")])])]),s("h3",{attrs:{id:"撤销远程提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销远程提交"}},[t._v("#")]),t._v(" 撤销远程提交")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reset --hard HEAD^/版本号:撤回最近一次的commit内容为上一个版本/撤回到指定版本号内容\ngit push -f :撤销本地并且删除远程提交需要强制提交\n")])])]),s("h3",{attrs:{id:"处理本地回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理本地回滚"}},[t._v("#")]),t._v(" 处理本地回滚")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reset --hard commitId：回滚到指定commitId\ngit reset --hard head : 回滚到上一个版本\ngit reset --soft head ：回滚上一个版本到工作区\n")])])]),s("h3",{attrs:{id:"处理远程仓库回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理远程仓库回滚"}},[t._v("#")]),t._v(" 处理远程仓库回滚")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reset --hard commit {commitId}（直接回滚到commitId）\ngit push --force origin {branchName}\n# 其他本地已有该分支的小伙伴本地\ngit reset --hard origin/{branchName}\ngit pull origin {branchName}\n")])])]),s("h3",{attrs:{id:"暂存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存"}},[t._v("#")]),t._v(" 暂存")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git stash :暂存\ngit stash list : 查看缓存列表\ngit stash pop :取消最近一次的暂存\n")])])]),s("h3",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout -b 新分支名 基于创建的分支名\ngit push -u origin 新分支名 （推到远程）\n本地与远程创建联系： git branch –set-upstream-to=origin/远程分支的名字  本地分支的名字\n")])])]),s("h3",{attrs:{id:"创建本地分支并且同步远程分支-本地没有master分支-需要重新创建一个本地master分支并且要同步远程的master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建本地分支并且同步远程分支-本地没有master分支-需要重新创建一个本地master分支并且要同步远程的master"}},[t._v("#")]),t._v(" 创建本地分支并且同步远程分支(本地没有master分支，需要重新创建一个本地master分支并且要同步远程的master)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git checkout -b master origin/master\n")])])]),s("h3",{attrs:{id:"删除本地分支-需要切其他分支操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支-需要切其他分支操作"}},[t._v("#")]),t._v(" 删除本地分支：需要切其他分支操作")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -D 要删除分支名\n")])])]),s("h3",{attrs:{id:"删除远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[t._v("#")]),t._v(" 删除远程分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push -u origin --delete 分支名\n")])])]),s("h3",{attrs:{id:"删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("rm -rf  文件名(node_modules/)\n")])])]),s("h3",{attrs:{id:"查看远程分支状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看远程分支状态"}},[t._v("#")]),t._v(" 查看远程分支状态")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote show origin\n")])])]),s("h3",{attrs:{id:"更新远程分支和本地分支保持一致-本地、远程分支都删除-使用git-branch-a-依然有远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新远程分支和本地分支保持一致-本地、远程分支都删除-使用git-branch-a-依然有远程分支"}},[t._v("#")]),t._v(" 更新远程分支和本地分支保持一致（本地、远程分支都删除，使用git branch -a 依然有远程分支）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote prune  origin\n")])])]),s("h3",{attrs:{id:"分支强制合并-将modify分支内容强制合并到master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支强制合并-将modify分支内容强制合并到master"}},[t._v("#")]),t._v(" 分支强制合并（将modify分支内容强制合并到master）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push origin modify:master --force\n")])])]),s("h3",{attrs:{id:"同步本地远程分支-远程删除分支-本地依然有"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步本地远程分支-远程删除分支-本地依然有"}},[t._v("#")]),t._v(" 同步本地远程分支：（远程删除分支，本地依然有）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote prune origin\n")])])]),s("h3",{attrs:{id:"批量删除本地分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量删除本地分支"}},[t._v("#")]),t._v(" 批量删除本地分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git branch | grep -v "master" | xargs git branch -D\n')])])]),s("h3",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('git merge --no-f -m "merge 的备注"  需要merge的分支名： merge分支提交备注\n')])])]),s("h3",{attrs:{id:"创建ssh-key-创建免登录的授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建ssh-key-创建免登录的授权"}},[t._v("#")]),t._v(" 创建SSH Key 创建免登录的授权")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.ssh-keygen -t rsa -C 769461729@qq.com（setting的中查找邮箱地址 邮箱不写）\n   或者使用ssh-keygen -t rsa命令\n2.找到rsa.pub key,导入到gitlib中（执行代码会有key的地址，然后在gitlab中ssh key\n中粘贴入key）\n")])])]),s("h3",{attrs:{id:"提交文件夹到github-文件夹为空"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交文件夹到github-文件夹为空"}},[t._v("#")]),t._v(" 提交文件夹到github（文件夹为空）")]),t._v(" "),s("p",[t._v("问题原因：文件夹里有隐藏的.git文件和当前项目.git冲突（同一个仓库有多个项目）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" git rm -rf --cached '项目名称'\n\n")])])]),s("h3",{attrs:{id:"仓库迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仓库迁移"}},[t._v("#")]),t._v(" 仓库迁移")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("旧项目web-district地址： ssh://git@gitlab.dev.zhoukoudian.top:2289/pzy/web-district.gitls\n新项目web-district地址：http://git.opt.zhoukoudian.top/pzy/web-district.git\n1、新项目创建一个新的web-district空仓库\n2、进入旧项目web-district项目2.1.6分支下：\n1.原地址克隆一份裸版本库：git clone --bare ssh://git@gitlab.dev.zhoukoudian.top:2289/pzy/web-district.git \n2.推送裸版本库到新的地址：git push --mirror http://git.opt.zhoukoudian.top/pzy/web-district.git\n")])])]),s("h3",{attrs:{id:"多个仓库使用gitclone没有办法下载-ssh和http都下载不了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个仓库使用gitclone没有办法下载-ssh和http都下载不了"}},[t._v("#")]),t._v(" 多个仓库使用gitclone没有办法下载（ssh和http都下载不了）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.控制面板---用户账号---凭证管理----windos凭证---找到新仓库的普通凭证然后编辑，修改新仓库的名称和密码然后执行下边命令\n2.git clone http://liuxx@git.pro.zhoukoudian.top/athlon/web-business-student.git（liuxx 这是git账号名）\n")])])]),s("h3",{attrs:{id:"git-help-gc-本地悬空对象过多-删除stash没有真正删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-help-gc-本地悬空对象过多-删除stash没有真正删除"}},[t._v("#")]),t._v(" git help gc：本地悬空对象过多（删除stash没有真正删除）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git fsck --lost-found\ngit gc --prune=now\n")])])]),s("h3",{attrs:{id:"日常使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日常使用"}},[t._v("#")]),t._v(" 日常使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git log:查看提交记录\ngit log --oneline :查看提交记录，只有备注和commitId\ngit reflog:查看历史命令git \ngit show / git show 版本号:查看最近一次提交详情/查看指定提交版本号详情\ngit status:查看提交状态\npwd：当前项目本地存放地址 /e/starlinke/web-front\ngit remote -v:查看当前项目远程的地址 ssh://git@code.starlinke.cn:222/erp/web-front.git \n")])])]),s("h3",{attrs:{id:"查看分支创建时间和从那个分支创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看分支创建时间和从那个分支创建"}},[t._v("#")]),t._v(" 查看分支创建时间和从那个分支创建")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git reflog show --date=iso 分支名 \n")])])]),s("h3",{attrs:{id:"查看插件版本号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看插件版本号"}},[t._v("#")]),t._v(" 查看插件版本号")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm list 插件名\n")])])]),s("h3",{attrs:{id:"更改commit信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更改commit信息"}},[t._v("#")]),t._v(" 更改commit信息")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.更改最后一次提交记录信息\ngit commit --amend\n(1)按 英文i 进入编辑模式，对提交信息进行修改。按esc完成修改 然后输入!wq 退出修改\n\n2.修改更早的提交记录信息- 例子是修改第二条\ngit rebase -i HEAD~2 \n（1）按 英文i 进入编辑模式 将要修改的记录前pick改成edit。 按esc完成修改 然后输入!wq 退出修改\n (2) 执行git commit --amend 修改提交信息\n (3) 用git rebase --continue完成\n (4) git push --force到远程仓库\n")])])]),s("h2",{attrs:{id:"npm命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm命令"}},[t._v("#")]),t._v(" npm命令")]),t._v(" "),s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#下载插件使用临时淘宝镜像下载，尽量使用nrm\nnpm i 插件名 --registry https://registry.npm.taobao.org\n#查看插件版本号\nnpm view 插件名 versions\n#卸载模块\nnpm uninstall 模块名称\n#查看 /node_modules/ 目录\nnpm ls\n#更新模块\nnpm update 模块名称（express）\n#全局安装的对应命令行程序更新至最新版\nnpm update <package> -g\n")])])]),s("h2",{attrs:{id:"linux命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux命令"}},[t._v("#")]),t._v(" linux命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ls -a 查看:查看隐藏文件(.开头)\nls -a -l :以列表形式展示： ls -a -l \npwd:查看当前用户\ncd /:切换到根目录\ncd ~:切换到home目录 \nsudo管理员运行\nrm 文件路径:删除文件\nrm -rf 文件路径:强制删除（子文件）\n:wq:保存编辑操作退出\n:wq!:保存编辑强制退出\n:q:退出\n:q!:表示强制不保存退出，不对文件进行保存\nopen  ~/.隐藏文件名  -a Visual\\ Studio\\ Code:进入隐藏文件\nsource ~/.zshrc(路径):使用文件生效（元文件）\nhttps://blog.csdn.net/qq_23329167/article/details/83856430\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);